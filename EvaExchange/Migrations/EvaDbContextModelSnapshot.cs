// <auto-generated />
using System;
using EvaExchange.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EvaExchange.Migrations
{
    [DbContext(typeof(EvaDbContext))]
    partial class EvaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EvaExchange.Entities.Portfolio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Portfolios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TotalAmount = 2000m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            TotalAmount = 1000m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            TotalAmount = 20000m,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("EvaExchange.Entities.PortfolioShare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PortfolioId")
                        .HasColumnType("integer");

                    b.Property<int>("ShareId")
                        .HasColumnType("integer");

                    b.Property<int>("ShareQuantity")
                        .HasColumnType("integer");

                    b.Property<string>("TotalValue")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId");

                    b.ToTable("PortfolioShares");
                });

            modelBuilder.Entity("EvaExchange.Entities.Share", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("PortfolioShareId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PriceChangeDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 6, 27, 16, 18, 9, 282, DateTimeKind.Utc).AddTicks(2885));

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioShareId");

                    b.HasIndex("Symbol")
                        .IsUnique();

                    b.ToTable("Shares");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Price = 13m,
                            PriceChangeDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 50,
                            Symbol = "EA"
                        },
                        new
                        {
                            Id = 2,
                            Price = 88m,
                            PriceChangeDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 300,
                            Symbol = "PEP"
                        },
                        new
                        {
                            Id = 3,
                            Price = 26m,
                            PriceChangeDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 80,
                            Symbol = "ROP"
                        },
                        new
                        {
                            Id = 4,
                            Price = 35m,
                            PriceChangeDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 100,
                            Symbol = "TXN"
                        },
                        new
                        {
                            Id = 5,
                            Price = 60m,
                            PriceChangeDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 70,
                            Symbol = "GLD"
                        });
                });

            modelBuilder.Entity("EvaExchange.Entities.Trade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PortfolioId")
                        .HasColumnType("integer");

                    b.Property<int>("ShareId")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TradeTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 6, 27, 16, 18, 9, 282, DateTimeKind.Utc).AddTicks(3415));

                    b.Property<string>("TradeType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId");

                    b.HasIndex("ShareId");

                    b.ToTable("Trades");
                });

            modelBuilder.Entity("EvaExchange.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Jesse Livermore"
                        },
                        new
                        {
                            Id = 2,
                            Name = "William Delbert Gann"
                        },
                        new
                        {
                            Id = 3,
                            Name = "George Soros"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Richard Dennis"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Paul Tudor Jones"
                        });
                });

            modelBuilder.Entity("EvaExchange.Entities.Portfolio", b =>
                {
                    b.HasOne("EvaExchange.Entities.User", "User")
                        .WithOne("Portfolio")
                        .HasForeignKey("EvaExchange.Entities.Portfolio", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EvaExchange.Entities.PortfolioShare", b =>
                {
                    b.HasOne("EvaExchange.Entities.Portfolio", "Portfolio")
                        .WithMany("PortfolioShares")
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Portfolio");
                });

            modelBuilder.Entity("EvaExchange.Entities.Share", b =>
                {
                    b.HasOne("EvaExchange.Entities.PortfolioShare", null)
                        .WithMany("Shares")
                        .HasForeignKey("PortfolioShareId");
                });

            modelBuilder.Entity("EvaExchange.Entities.Trade", b =>
                {
                    b.HasOne("EvaExchange.Entities.Portfolio", "Portfolio")
                        .WithMany("Trades")
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvaExchange.Entities.Share", null)
                        .WithMany("Trades")
                        .HasForeignKey("ShareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Portfolio");
                });

            modelBuilder.Entity("EvaExchange.Entities.Portfolio", b =>
                {
                    b.Navigation("PortfolioShares");

                    b.Navigation("Trades");
                });

            modelBuilder.Entity("EvaExchange.Entities.PortfolioShare", b =>
                {
                    b.Navigation("Shares");
                });

            modelBuilder.Entity("EvaExchange.Entities.Share", b =>
                {
                    b.Navigation("Trades");
                });

            modelBuilder.Entity("EvaExchange.Entities.User", b =>
                {
                    b.Navigation("Portfolio")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
